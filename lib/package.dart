library idea;

import 'package:flutter/material.dart';
import 'package:logger/logger.dart';

import 'src/context_menu/ide_context_menu_overlay.dart';

export 'src/appbar/ide_appbar.dart';
export 'src/button/ide_button_toggle_fullscreen.dart';
export 'src/button/ide_statusbar_button.dart';
export 'src/context_menu/ide_context_menu_button.dart';
export 'src/context_menu/ide_context_menu_config.dart';
export 'src/context_menu/ide_context_menu_overlay.dart';
export 'src/context_menu/menus/ide_context_menu.dart';
export 'src/context_menu/menus/ide_context_menu_state_mixin.dart';
export 'src/context_menu/menus/ide_link_context_menu.dart';
export 'src/context_menu/menus/ide_text_context_menu.dart';
export 'src/context_menu/widgets/ide_context_menu_button.dart';
export 'src/context_menu/widgets/ide_context_menu_card.dart';
export 'src/context_menu/widgets/ide_context_menu_divider.dart';
export 'src/custom/filter/config/ide_custom_filter_config.dart';
export 'src/custom/filter/config/ide_custom_filter_config_condition.dart';
export 'src/custom/filter/config/ide_custom_filter_config_option.dart';
export 'src/custom/filter/ide_custom_filter.dart';
export 'src/custom/filter/ide_custom_filter_result.dart';
export 'src/custom/filter/ide_custom_filter_value.dart';
export 'src/custom/icon_button/ide_custom_icon_button.dart';
export 'src/custom/icon_button/ide_custom_icon_button_decoration.dart';
export 'src/search/ide_search_controller.dart';
export 'src/search/ide_search.dart';
export 'src/search/ide_search_result.dart';
export 'src/search/popup/ide_search_popup_item.dart';
export 'src/custom/popup/package.dart';
export 'src/datetime/package.dart';
export 'src/dialog/ide_dialog.dart';
export 'src/dialog/ide_dialog_button.dart';
export 'src/dialog/ide_dialog_callback.dart';
export 'src/dialog/ide_dialog_confirm.dart';
export 'src/dropdown/button/package.dart';
export 'src/dropdown/ide_dropdown.dart';
export 'src/dropdown/ide_dropdown_item.dart';
export 'src/dropdown/ide_dropdown_label.dart';
export 'src/future/ide_future_error.dart';
export 'src/future/ide_future_loading.dart';
export 'src/icon/ide_icon.dart';
export 'src/icon/ide_icon_button.dart';
export 'src/ide.dart';
export 'src/expands/package.dart';
export 'src/ide_application.dart';
export 'src/ide_controller.dart';
export 'src/ide_validator.dart';
export 'src/ide_binding.dart';
export 'src/ide_content.dart';
export 'src/ide_data.dart';
export 'src/ide_enabled.dart';
export 'src/ide_exception.dart';
export 'src/ide_layer.dart';
export 'src/ide_render.dart';
export 'src/ide_scroll_behavior.dart';
export 'src/ide_tabbar.dart';
export 'src/ide_time_picker.dart';
export 'src/table/package.dart';
export 'src/kukaflix/package.dart';
export 'src/menu/ide_menu.dart';
export 'src/menu/ide_menu_box_render.dart';
export 'src/menu/ide_menu_checkbox.dart';
export 'src/menu/ide_menu_item.dart';
export 'src/menu/ide_menu_response.dart';
export 'src/menu/submenu/ide_submenu_item.dart';
export 'src/menubar/bottom/ide_menubar_bottom.dart';
export 'src/menubar/bottom/ide_menubar_bottom_button.dart';
export 'src/menubar/bottom/ide_menubar_bottom_config.dart';
export 'src/menubar/bottom/ide_menubar_bottom_style.dart';
export 'src/menubar/left/ide_menubar_left.dart';
export 'src/menubar/left/ide_menubar_left_button.dart';
export 'src/menubar/left/ide_menubar_left_config.dart';
export 'src/menubar/left/ide_menubar_left_style.dart';
export 'src/menubar/right/ide_menubar_right.dart';
export 'src/menubar/right/ide_menubar_right_button.dart';
export 'src/menubar/right/ide_menubar_right_layout.dart';
export 'src/menubar/right/ide_menubar_right_style.dart';
export 'src/menubar/top/ide_menubar_top.dart';
export 'src/menubar/top/ide_menubar_top_config.dart';
export 'src/menubar/top/ide_menubar_top_style.dart';
export 'src/module/ide_module.dart';
export 'src/module/ide_modules.dart';
export 'src/notification/package.dart';
export 'src/panel/bottom/ide_panel_bottom.dart';
export 'src/panel/bottom/ide_panel_bottom_event.dart';
export 'src/panel/bottom/ide_panel_bottom_head.dart';
export 'src/panel/bottom/ide_panels_bottom.dart';
export 'src/panel/left/ide_panel_left.dart';
export 'src/panel/left/ide_panel_left_footer.dart';
export 'src/panel/left/ide_panel_left_header.dart';
export 'src/panel/right/ide_panel_right.dart';
export 'src/panel/right/ide_panel_right_button_menu.dart';
export 'src/panel/right/ide_panel_right_header.dart';
export 'src/panel/right/ide_panel_right_middleware.dart';
export 'src/panel/right/ide_panels_right.dart';
export 'src/preferences/package.dart';
export 'src/progress/ide_progress_circular.dart';
export 'src/progress/ide_progress_bar.dart';
export 'src/push_mode/ide_push_by_vertical.dart';
export 'src/push_mode/ide_pushed_by_horizontal.dart';
export 'src/reorderables/package.dart';
export 'src/responsive/ide_div.dart';
export 'src/responsive/ide_div_layout.dart';
export 'src/responsive/ide_division.dart';
export 'src/responsive/ide_responsive.dart';
export 'src/sidenav/ide_sidenav.dart';
export 'src/sidenav/ide_sidenav_item.dart';
export 'src/sidenav/ide_sidenav_subitem.dart';
export 'src/size/ide_size.dart';
export 'src/statusbar/ide_statusbar.dart';
export 'src/statusbar/ide_statusbar_progress.dart';
export 'src/style/ide_color_scheme.dart';
export 'src/style/ide_theme.dart';
export 'src/toolbar/ide_toolbar.dart';
export 'src/toolbar/ide_toolbar_style.dart';
export 'src/translation/ide_translation.dart';
export 'src/visibility/ide_visibility_builder.dart';
export 'src/visibility/ide_visibility_toogle.dart';
export 'src/widget/checkbox_list/package.dart';
export 'src/widget/input_button/package.dart';
export 'src/widget/input_sufix_button/package.dart';
export 'src/widget/radio_list/package.dart';
export 'src/widget/switch_list/package.dart';
export 'src/widget/teckflix/package.dart';
export 'src/workspace/ide_workspace.dart';
export 'src/ide_option_value.dart';
export 'src/panel/package.dart';
export 'src/radio_group/package.dart';

extension IdeContextMenuExtensions on BuildContext {
  IdeContextMenuOverlayState get contextMenuOverlay => IdeContextMenuOverlay.of(this);
}

Logger ideLog = Logger(
  printer: PrettyPrinter(),
);
